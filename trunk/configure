#! /bin/sh

# configuration script

# This file is part of the Zarith library 
# http://forge.ocamlcore.org/projects/zarith .
# It is distributed under LGPL 2 licensing, with static linking exception.
# See the LICENSE file included in the distribution.
#   
# Copyright (c) 2010-2011 Antoine Miné, Abstraction project.
# Abstraction is part of the LIENS (Laboratoire d'Informatique de l'ENS),
# a joint laboratory by:
# CNRS (Centre national de la recherche scientifique, France),
# ENS (École normale supérieure, Paris, France),
# INRIA Rocquencourt (Institut national de recherche en informatique, France).


# options
installdir='auto'
ocamllibdir='auto'
host='auto'
gmp='auto'
perf='no'

# should we make the following auto-detected or configurable?
cc='gcc'
as='as'
ar='ar'
ccinc="$CFLAGS"
cclib="$LDFLAGS"
ccopt='-O3 -Wall -Wextra'
ccdef=''
mlflags="$OCAMLFLAGS"
mloptflags="$OCAMLOPTFLAGS"
mlinc="$OCAMLINC"

# sanitize
LC_ALL=C
export LC_ALL
unset IFS


# help
help()
{
    cat <<EOF
usage: configure [options]

where options include:
  -installdir dir      installation directory
  -ocamllibdir dir     ocaml library directory
  -host arch           host type, for platform-specific asm code
  -noasm               disable platform-specific code
  -gmp                 use GMP library (default)
  -mpir                use MPIR library instead of GMP
  -perf                enable performance statistics
EOF
    exit
}

# parse arguments
while : ; do
    case "$1" in
        "") 
            break;;
        -installdir|--installdir)
            installdir="$2"
            shift;;
        -ocamllibdir|---ocamllibdir)
            ocamllibdir="$2"
            shift;;
        -host|--host)
            host="$2"
            shift;;
        -noasm|--no-asm)
            host='none';;
        -help|--help)
            help;;
        -gmp|--gmp)
            gmp='gmp';;
        -mpir|--mpir)
            gmp='mpir';;
        -perf|--perf)
            perf='yes';;
        *)
            echo "unknown option $1, try -help"
            exit 2;;
    esac
    shift
done

if test "$perf" = "yes"; then ccdef="-DZ_PERF_COUNTER $ccdef"; fi


# checking binaries in $PATH

searchbin()
{
    echo -n "binary $1: "
    IFS=':'
    for i in $PATH
    do
        if test -z "$i"; then i='.'; fi
        if test -x $i/$1; then echo "found in $i"; unset IFS; return 1; fi
    done
    echo "not found"
    unset IFS
    return 0
}

searchbinreq()
{
    searchbin $1
    if test $? -eq 0; then echo "required program $1 not found"; exit 2; fi
}


# checking includes and libraries

checkinc()
{
    echo -n "include $1: "
    rm -f tmp.c tmp.o
    echo "#include <$1>" > tmp.c
    echo "int main() { return 1; }" >> tmp.c
    r=1
    $cc $ccopt $ccinc -c tmp.c -o tmp.o >/dev/null 2>/dev/null || r=0
    if test ! -f tmp.o; then r=0; fi
    rm -f tmp.c tmp.o
    if test $r -eq 0; then echo "not found"; else echo "found"; fi
    return $r
}

checklib()
{
    echo -n "library $1: "
    rm -f tmp.c tmp.out
    echo "int main() { return 1; }" >> tmp.c
    r=1
    $cc $ccopt $cclib tmp.c -l$1 -o tmp.out >/dev/null 2>/dev/null || r=0
    if test ! -x tmp.out; then r=0; fi
    rm -f tmp.c tmp.o tmp.out
    if test $r -eq 0; then echo "not found"; else echo "found"; fi
    return $r
}


# check required programs

searchbinreq ocamlc
searchbinreq ocamlopt
searchbinreq $cc
searchbinreq $ar
searchbinreq perl


# check C compiler

checklib m
if test $? -eq 0; then
    # try again with no options
    ccopt=''
    checklib m
    if test $? -eq 0; then echo "cannot compile and link program"; exit 2; fi
fi


# directories

if test "$ocamllibdir" = "auto"; then ocamllibdir=`ocamlc -where`; fi

if ! test -f "$ocamllibdir/caml/mlvalues.h"
then echo "cannot find OCaml libraries in $ocamllibdir"; exit 2; fi
ccinc="$ccinc -I$ocamllibdir"
checkinc "caml/mlvalues.h"
if test $? -eq 0; then echo "cannot include caml/mlvalues.h"; exit 2; fi


# installation method

searchbin ocamlfind
if test $? -eq 1; then 
    instmeth='findlib'
    if test "$installdir" = "auto"
    then installdir=`ocamlfind printconf destdir`; fi
else
    searchbin install
    if test $? -eq 1; then instmeth='install'
    else echo "no installation method found"; exit 2; fi
    if test "$installdir" = "auto"; then installdir="$ocamllibdir"; fi
fi



# auto-detect host

if test "x$host" = 'xauto'; then 
    searchbin uname
    if test $? -eq 0; then host='none'
    else host=`. ./config.guess`
    fi
fi


# set arch from host

arch='none'
case $host in
    x86_64-*linux-gnu)
        arch='x86_64';;
    i686-*linux-gnu)
        arch='i686';;
    none)
        ;;
    *) 
        echo "unknown host $host";;
esac

if test "$arch" != 'none'; then
    searchbin $as
    if test $? -eq 0; then echo "no assembler found"; arch='none'
    elif test ! -f "caml_z_${arch}.S"; then arch='none'; fi
fi


# check GMP, MPRI

if test "$gmp" = 'gmp' -o "$gmp" = 'auto'; then
    checkinc gmp.h
    if test $? -eq 1; then
        checklib gmp
        if test $? -eq 1; then gmp='OK'; cclib="$cclib -lgmp"; ccdef="$ccdef -DHAS_GMP"; fi
    fi
fi
if test "$gmp" = 'mpir' -o "$gmp" = 'auto'; then
    checkinc mpir.h
    if test $? -eq 1; then
        checklib mpir
        if test $? -eq 1; then gmp='OK'; cclib="$cclib -lmpir"; ccdef="$ccdef -DHAS_MPIR"; fi
    fi
fi
if test "$gmp" != 'OK'; then echo "cannot find GMP or MPIR"; exit 2; fi


# OCaml version

case `ocamlc -version` in
    3.10* | 3.11* | 3.12.0*)
        ;;
    3.12.* | 3.1*)
        echo "extended comparison found"
        ccdef="-DOCAML_COMPARE_EXT $ccdef"
        ;;
    *)
        ;;
esac



# dump Makefile

cat > Makefile <<EOF
# generated by ./configure

CC=$cc
AS=$as
OCAMLC=ocamlc
OCAMLOPT=ocamlopt
OCAMLDEP=ocamldep
OCAMLDOC=ocamldoc
OCAMLFLAGS=$mlflags
OCAMLOPTFLAGS=$mloptflags
OCAMLINC=$mlinc
CFLAGS=$ccinc $ccdef $ccopt
LIBS=$cclib
ARCH=$arch
INSTALLDIR=$installdir
AR=$ar
INSTALL=install
OCAMLFIND=ocamlfind
INSTMETH=$instmeth

include project.mak
EOF


# dump summary

cat <<EOF

detected configuration:

  asm path:             $arch
  C include:            $ccinc
  C options:            $ccopt
  C defines:            $ccdef
  C libraries:          $cclib
  installation path:    $installdir
  installation method   $instmeth

configuration successful!
now type "make" to build
then type "make install" or "sudo make install" to install
EOF

